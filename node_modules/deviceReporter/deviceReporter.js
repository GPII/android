/*!
GPII Android Device Reporter

Copyright 2014 Emergya

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

// Currently we need to do this in order to work correctly with
// Anode's JS bridge
var thatall = this;

(function () {
    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");

    var bridge = require("bridge");

    fluid.registerNamespace("gpii.androidDeviceReporter");

    fluid.defaults("gpii.androidDeviceReporter.findService", {
        gradeNames: "fluid.function",
        argumentMap: {
            name: 0
        }
    });

    fluid.defaults("gpii.androidDeviceReporter.findApplication", {
        gradeNames: "fluid.function",
        argumentMap: {
            name: 0
        }
    });

    gpii.androidDeviceReporter.findService = function(name) {
         return gpii.androidDeviceReporter.deviceInfoCache.Services.some(function (srv) {
            return srv === name;
        });
    };

    gpii.androidDeviceReporter.findApplication = function(name) {
         return gpii.androidDeviceReporter.deviceInfoCache.Applications.some(function (app) {
            return app === name;
        });
    };

})();
