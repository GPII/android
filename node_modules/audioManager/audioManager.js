/*!
GPII Android Audio Manager

Copyright 2013 Emergya

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

// Currently we need to do this in order to work correctly with
// Anode's JS bridge
var thatall = this;

(function () {
    "use strict";

    var fluid = require("universal");
    var gpii = fluid.registerNamespace("gpii");

    var bridge = require("bridge");

    fluid.registerNamespace("gpii.androidAudioManager");

    fluid.defaults("gpii.androidAudioManager.getVolume", {
        gradeNames: "fluid.function",
        argumentMap: {
            settingsarray: 0
        }
    });

    fluid.defaults("gpii.androidAudioManager.setVolume", {
        gradeNames: "fluid.function",
        argumentMap: {
            settingsarray: 0
        }
    });

    gpii.androidAudioManager.getVolume = function(settingsarray) {
        var androidAudioManager = bridge.load("net.gpii.AndroidAudioManagerImpl", thatall);
        var app = fluid.copy(settingsarray);

        for (var appId in app) {
            for (var j = 0; j < app[appId].length; j++) {
                var settings = app[appId][j].settings;

                for (var setting in settings) {
                    settings[setting] = androidAudioManager.getVolume(setting);
                }

                var noOptions = { settings: settings };
                app[appId][j] = noOptions;
            }
        }

        return app;
    };

    gpii.androidAudioManager.setVolume = function(settingsarray) {
        var androidAudioManager = bridge.load("net.gpii.AndroidAudioManagerImpl", thatall);
        var app = fluid.copy(settingsarray);

        for (var appId in app) {
            for (var j = 0; j < app[appId].length; j++) {
                var settings = app[appId][j].settings;

                for (var setting in settings) {
                    var value = settings[setting];
                    var oldValue;

                    oldValue = androidAudioManager.getVolume(setting);
                    androidAudioManager.setVolume(setting, parseInt(value));

                    settings[setting] = {
                        "oldValue": oldValue,
                        "newValue": value
                    };
                }

                var noOptions = { settings: settings};
                app[appId][j] = noOptions;
            }
        }

        return app;
    };

})();
